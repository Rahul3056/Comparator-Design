#### **Example Verilog Code**  
```verilog
// 2-bit Comparator Module
module comparator_2bit (
    input wire [1:0] A, B,
    output wire A_gt_B, A_lt_B, A_eq_B
);
    assign A_gt_B = (A[1] & ~B[1]) | (A[0] & ~B[0] & (A[1] ~^ B[1]));
    assign A_lt_B = (B[1] & ~A[1]) | (B[0] & ~A[0] & (A[1] ~^ B[1]));
    assign A_eq_B = ~(A[1] ^ B[1]) & ~(A[0] ^ B[0]);
endmodule
```

#### **Testbench Code**  
```verilog
// Testbench for 2-bit Comparator
module testbench;
    reg [1:0] A, B;
    wire A_gt_B, A_lt_B, A_eq_B;

    // Instantiate the comparator module
    comparator_2bit uut (.A(A), .B(B), .A_gt_B(A_gt_B), .A_lt_B(A_lt_B), .A_eq_B(A_eq_B));

    initial begin
        $monitor("A=%b, B=%b | A>B=%b, A<B=%b, A=B=%b", A, B, A_gt_B, A_lt_B, A_eq_B);

        // Test Cases
        A = 2'b00; B = 2'b00; #10;  // A = B
        A = 2'b01; B = 2'b00; #10;  // A > B
        A = 2'b10; B = 2'b11; #10;  // A < B
        A = 2'b11; B = 2'b10; #10;  // A > B
        A = 2'b11; B = 2'b11; #10;  // A = B
        
        $finish;
    end
endmodule
```

#### **Simulation Output (Console Log Example)**  
```
A=00, B=00 | A>B=0, A<B=0, A=B=1  
A=01, B=00 | A>B=1, A<B=0, A=B=0  
A=10, B=11 | A>B=0, A<B=1, A=B=0  
A=11, B=10 | A>B=1, A<B=0, A=B=0  
A=11, B=11 | A>B=0, A<B=0, A=B=1  
```
